services:
  postgres:
    container_name: postgres
    image: postgres
    environment:
      POSTGRES_USER: amigoscode
      POSTGRES_PASSWORD: password
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - postgres
    restart: unless-stopped

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - postgres
    restart: unless-stopped

  rabbitmq:
    image: rabbitmq:3.9.11-management-alpine
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - postgres
      - spring
    restart: unless-stopped

 # eureka-server:
 #   image: kris13beka/eureka-server:0.0.1-SNAPSHOT
  #  container_name: eureka-server
  #  ports:
  #    - "8761:8761"
  #  environment:
  #    - SPRING_PROFILES_ACTIVE=docker
 #   networks:
 #     - spring
 #   healthcheck:
  #    test: ["CMD", "curl", "-f", "http://localhost:8761/eureka/"]
    #  interval: 30s
  #    timeout: 10s
  #    retries: 3

 # customer:
  #  image: kris13beka/customer:0.0.1-SNAPSHOT
#    container_name: customer
 #   ports:
 #     - "8081:8081"
#    environment:
 #     - SPRING_PROFILES_ACTIVE=docker
 #   networks:
 #     - spring
 #     - postgres
 #   depends_on:
 #     - eureka-server
 #     - postgres
 #     - rabbitmq

 # fraud:
 #   image: kris13beka/fraud:0.0.1-SNAPSHOT
 #   container_name: fraud
  #  ports:
 #     - "8080:8080"
 #   environment:
 #     - SPRING_PROFILES_ACTIVE=docker
 #   networks:
 #     - spring
  #    - postgres
 #   depends_on:
   #   - eureka-server
  #    - postgres
   #   - rabbitmq

#  notifications:
 #   image: kris13beka/notifications:0.0.1-SNAPSHOT
 #   container_name: notifications
 #   ports:
  #    - "8086:8086"
   # environment:
  #    - SPRING_PROFILES_ACTIVE=docker
   # networks:
  #    - spring
  #    - postgres
 #   depends_on:
  #    - eureka-server
   #   - postgres
  #    - rabbitmq

 # apigateway:
 #   image: kris13beka/apigateway:0.0.1-SNAPSHOT
 #   container_name: api-gateway
 #   ports:
 #     - "8083:8083"
 #   environment:
 #     - SPRING_PROFILES_ACTIVE=docker
 #   networks:
 #     - spring
  #  depends_on:

networks:
  postgres:
    driver: bridge
  spring:
    driver: bridge

volumes:
  postgres:
  pgadmin:
